<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.btjf.mapper.order.ProductionProcedureMapper">
    <resultMap id="BaseResultMap" type="com.btjf.model.order.ProductionProcedure">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="productionNo" jdbcType="VARCHAR" property="productionNo"/>
        <result column="orderId" jdbcType="INTEGER" property="orderId"/>
        <result column="orderNo" jdbcType="VARCHAR" property="orderNo"/>
        <result column="productNo" jdbcType="VARCHAR" property="productNo"/>
        <result column="procedureId" jdbcType="INTEGER" property="procedureId"/>
        <result column="procedureName" jdbcType="VARCHAR" property="procedureName"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="isDelete" jdbcType="INTEGER" property="isDelete"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="assignNum" jdbcType="INTEGER" property="assignNum"/>
        <result column="luoId" jdbcType="INTEGER" property="luoId"/>
        <result column="multipleProductionId" jdbcType="INTEGER" property="multipleProductionId"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, productionNo, orderId, orderNo, productNo, procedureId, procedureName, createTime,
        isDelete, sort, assignNum, luoId, multipleProductionId, type
    </sql>
    <select id="selectByExample" parameterType="com.btjf.model.order.ProductionProcedureExample"
            resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_Production_Procedure
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from t_Production_Procedure
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from t_Production_Procedure
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.btjf.model.order.ProductionProcedureExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from t_Production_Procedure
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.btjf.model.order.ProductionProcedure">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_Production_Procedure (productionNo, orderId, orderNo,
        productNo, procedureId, procedureName,
        createTime, isDelete, sort,
        assignNum, luoId, multipleProductionId,
        type)
        values (#{productionNo,jdbcType=VARCHAR}, #{orderId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR},
        #{productNo,jdbcType=VARCHAR}, #{procedureId,jdbcType=INTEGER}, #{procedureName,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER},
        #{assignNum,jdbcType=INTEGER}, #{luoId,jdbcType=INTEGER}, #{multipleProductionId,jdbcType=INTEGER},
        #{type,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.btjf.model.order.ProductionProcedure">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_Production_Procedure
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productionNo != null">
                productionNo,
            </if>
            <if test="orderId != null">
                orderId,
            </if>
            <if test="orderNo != null">
                orderNo,
            </if>
            <if test="productNo != null">
                productNo,
            </if>
            <if test="procedureId != null">
                procedureId,
            </if>
            <if test="procedureName != null">
                procedureName,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="isDelete != null">
                isDelete,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="assignNum != null">
                assignNum,
            </if>
            <if test="luoId != null">
                luoId,
            </if>
            <if test="multipleProductionId != null">
                multipleProductionId,
            </if>
            <if test="type != null">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productionNo != null">
                #{productionNo,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=INTEGER},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="productNo != null">
                #{productNo,jdbcType=VARCHAR},
            </if>
            <if test="procedureId != null">
                #{procedureId,jdbcType=INTEGER},
            </if>
            <if test="procedureName != null">
                #{procedureName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="assignNum != null">
                #{assignNum,jdbcType=INTEGER},
            </if>
            <if test="luoId != null">
                #{luoId,jdbcType=INTEGER},
            </if>
            <if test="multipleProductionId != null">
                #{multipleProductionId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.btjf.model.order.ProductionProcedureExample"
            resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from t_Production_Procedure
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_Production_Procedure
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.productionNo != null">
                productionNo = #{record.productionNo,jdbcType=VARCHAR},
            </if>
            <if test="record.orderId != null">
                orderId = #{record.orderId,jdbcType=INTEGER},
            </if>
            <if test="record.orderNo != null">
                orderNo = #{record.orderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.productNo != null">
                productNo = #{record.productNo,jdbcType=VARCHAR},
            </if>
            <if test="record.procedureId != null">
                procedureId = #{record.procedureId,jdbcType=INTEGER},
            </if>
            <if test="record.procedureName != null">
                procedureName = #{record.procedureName,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                createTime = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDelete != null">
                isDelete = #{record.isDelete,jdbcType=INTEGER},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.assignNum != null">
                assignNum = #{record.assignNum,jdbcType=INTEGER},
            </if>
            <if test="record.luoId != null">
                luoId = #{record.luoId,jdbcType=INTEGER},
            </if>
            <if test="record.multipleProductionId != null">
                multipleProductionId = #{record.multipleProductionId,jdbcType=INTEGER},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_Production_Procedure
        set id = #{record.id,jdbcType=INTEGER},
        productionNo = #{record.productionNo,jdbcType=VARCHAR},
        orderId = #{record.orderId,jdbcType=INTEGER},
        orderNo = #{record.orderNo,jdbcType=VARCHAR},
        productNo = #{record.productNo,jdbcType=VARCHAR},
        procedureId = #{record.procedureId,jdbcType=INTEGER},
        procedureName = #{record.procedureName,jdbcType=VARCHAR},
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
        isDelete = #{record.isDelete,jdbcType=INTEGER},
        sort = #{record.sort,jdbcType=INTEGER},
        assignNum = #{record.assignNum,jdbcType=INTEGER},
        luoId = #{record.luoId,jdbcType=INTEGER},
        multipleProductionId = #{record.multipleProductionId,jdbcType=INTEGER},
        type = #{record.type,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.btjf.model.order.ProductionProcedure">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_Production_Procedure
        <set>
            <if test="productionNo != null">
                productionNo = #{productionNo,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                orderId = #{orderId,jdbcType=INTEGER},
            </if>
            <if test="orderNo != null">
                orderNo = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="productNo != null">
                productNo = #{productNo,jdbcType=VARCHAR},
            </if>
            <if test="procedureId != null">
                procedureId = #{procedureId,jdbcType=INTEGER},
            </if>
            <if test="procedureName != null">
                procedureName = #{procedureName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                isDelete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="assignNum != null">
                assignNum = #{assignNum,jdbcType=INTEGER},
            </if>
            <if test="luoId != null">
                luoId = #{luoId,jdbcType=INTEGER},
            </if>
            <if test="multipleProductionId != null">
                multipleProductionId = #{multipleProductionId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.btjf.model.order.ProductionProcedure">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_Production_Procedure
        set productionNo = #{productionNo,jdbcType=VARCHAR},
        orderId = #{orderId,jdbcType=INTEGER},
        orderNo = #{orderNo,jdbcType=VARCHAR},
        productNo = #{productNo,jdbcType=VARCHAR},
        procedureId = #{procedureId,jdbcType=INTEGER},
        procedureName = #{procedureName,jdbcType=VARCHAR},
        createTime = #{createTime,jdbcType=TIMESTAMP},
        isDelete = #{isDelete,jdbcType=INTEGER},
        sort = #{sort,jdbcType=INTEGER},
        assignNum = #{assignNum,jdbcType=INTEGER},
        luoId = #{luoId,jdbcType=INTEGER},
        multipleProductionId = #{multipleProductionId,jdbcType=INTEGER},
        type = #{type,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findByProductionNo" resultMap="BaseResultMap">
        SELECT
        orderId as orderId,
        orderNo as orderNo,
        productNo as productNo,
        procedureId as procedureId,
        procedureName as procedureName,
        sort as sort
        FROM t_Production_Procedure
        WHERE isDelete = 0 and productionNo = #{productionNo}
        group by orderId, orderNo, productNo, procedureId, procedureName, sort
    </select>

    <select id="getConfigProcedure" resultMap="BaseResultMap">
        SELECT tpp.procedureId as procedureId , tpp.procedureName as procedureName, tpp.sort as sort
        FROM t_Production_Procedure tpp LEFT JOIN t_Product_Procedure_Workshop tppw on tpp.procedureId =
        tppw.procedureId
        WHERE 1=1
        <if test="deptName != null">
            and tppw.workshop = #{deptName}
        </if>
        <if test="productionNo != null">
            and tpp.productionNo = #{productionNo}
        </if>
        and tpp.isDelete = 0 and tppw.isDelete = 0 and tpp.procedureName not like '%质检%'
        group by tpp.procedureId, tpp.procedureName, tpp.sort


        <!--SELECT &amp;lt;include refid="Base_Column_List"/&amp;gt;
        FROM t_Production_Procedure
        WHERE 1=1
        &amp;lt;if test="productionNo != null"&amp;gt;
            and productionNo = #{productionNo}
        &amp;lt;/if&amp;gt;
        and isDelete = 0 and procedureName &amp;amp;lt;&amp;amp;gt;'质检'-->
    </select>

    <update id="deleteByProductionNo">
        UPDATE t_Production_Procedure
        SET isDelete = 1
        WHERE productionNo = #{productionNo}
    </update>

    <select id="procedureCanAssignNum" resultType="integer">
      SELECT sum(assignNum) FROM t_Production_Procedure
      WHERE orderNo = #{orderNo,jdbcType=VARCHAR}
      and productNo = #{productNo,jdbcType=VARCHAR}
      and  procedureId = #{procedureId,jdbcType=INTEGER}
      and isDelete = 0
      group by orderNo, productNo, procedureId
  </select>
    <select id="isContainZj" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM t_Production_Procedure
        WHERE procedureName = #{procedureName} and productionNo =#{productionNo}
        <if test="multipleProductionId != null">
            and multipleProductionId = #{multipleProductionId}
        </if>
        and isDelete = 0
    </select>

    <select id="getByMultipleId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_Production_Procedure
        where multipleProductionId = #{multipleId} and isDelete = 0
    </select>
</mapper>