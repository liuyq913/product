<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.btjf.mapper.order.ProductionProcedureConfirmMapper">
  <resultMap id="BaseResultMap" type="com.btjf.model.order.ProductionProcedureConfirm">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderNo" jdbcType="VARCHAR" property="orderNo" />
    <result column="productNo" jdbcType="VARCHAR" property="productNo" />
    <result column="procedureId" jdbcType="INTEGER" property="procedureId" />
    <result column="procedureName" jdbcType="VARCHAR" property="procedureName" />
    <result column="empId" jdbcType="INTEGER" property="empId" />
    <result column="num" jdbcType="DECIMAL" property="num" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="completeTime" jdbcType="TIMESTAMP" property="completeTime" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="lastModifyTime" jdbcType="TIMESTAMP" property="lastModifyTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="productionNo" jdbcType="VARCHAR" property="productionNo" />
    <result column="luoId" jdbcType="INTEGER" property="luoId" />
    <result column="pmOutBillNo" jdbcType="VARCHAR" property="pmOutBillNo" />
    <result column="isDelete" jdbcType="INTEGER" property="isDelete" />
    <result column="isChange" jdbcType="INTEGER" property="isChange" />
    <result column="workshop" jdbcType="VARCHAR" property="workshop" />
    <result column="inspectionor" jdbcType="VARCHAR" property="inspectionor" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, orderNo, productNo, procedureId, procedureName, empId, num, price, money, completeTime, 
    createTime, lastModifyTime, type, operator, productionNo, luoId, pmOutBillNo, isDelete, 
    isChange, workshop, inspectionor
  </sql>
  <select id="selectByExample" parameterType="com.btjf.model.order.ProductionProcedureConfirmExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_Production_Procedure_Confirm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_Production_Procedure_Confirm
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_Production_Procedure_Confirm
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.btjf.model.order.ProductionProcedureConfirmExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_Production_Procedure_Confirm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.btjf.model.order.ProductionProcedureConfirm">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_Production_Procedure_Confirm (orderNo, productNo, procedureId, 
      procedureName, empId, num, 
      price, money, completeTime, 
      createTime, lastModifyTime, type, 
      operator, productionNo, luoId, 
      pmOutBillNo, isDelete, isChange, 
      workshop, inspectionor)
    values (#{orderNo,jdbcType=VARCHAR}, #{productNo,jdbcType=VARCHAR}, #{procedureId,jdbcType=INTEGER}, 
      #{procedureName,jdbcType=VARCHAR}, #{empId,jdbcType=INTEGER}, #{num,jdbcType=DECIMAL}, 
      #{price,jdbcType=DECIMAL}, #{money,jdbcType=DECIMAL}, #{completeTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastModifyTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, 
      #{operator,jdbcType=VARCHAR}, #{productionNo,jdbcType=VARCHAR}, #{luoId,jdbcType=INTEGER}, 
      #{pmOutBillNo,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}, #{isChange,jdbcType=INTEGER}, 
      #{workshop,jdbcType=VARCHAR}, #{inspectionor,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.btjf.model.order.ProductionProcedureConfirm">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_Production_Procedure_Confirm
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        orderNo,
      </if>
      <if test="productNo != null">
        productNo,
      </if>
      <if test="procedureId != null">
        procedureId,
      </if>
      <if test="procedureName != null">
        procedureName,
      </if>
      <if test="empId != null">
        empId,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="completeTime != null">
        completeTime,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="lastModifyTime != null">
        lastModifyTime,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="productionNo != null">
        productionNo,
      </if>
      <if test="luoId != null">
        luoId,
      </if>
      <if test="pmOutBillNo != null">
        pmOutBillNo,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
      <if test="isChange != null">
        isChange,
      </if>
      <if test="workshop != null">
        workshop,
      </if>
      <if test="inspectionor != null">
        inspectionor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="procedureId != null">
        #{procedureId,jdbcType=INTEGER},
      </if>
      <if test="procedureName != null">
        #{procedureName,jdbcType=VARCHAR},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=DECIMAL},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="completeTime != null">
        #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null">
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="productionNo != null">
        #{productionNo,jdbcType=VARCHAR},
      </if>
      <if test="luoId != null">
        #{luoId,jdbcType=INTEGER},
      </if>
      <if test="pmOutBillNo != null">
        #{pmOutBillNo,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="isChange != null">
        #{isChange,jdbcType=INTEGER},
      </if>
      <if test="workshop != null">
        #{workshop,jdbcType=VARCHAR},
      </if>
      <if test="inspectionor != null">
        #{inspectionor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.btjf.model.order.ProductionProcedureConfirmExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_Production_Procedure_Confirm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_Production_Procedure_Confirm
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        orderNo = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productNo != null">
        productNo = #{record.productNo,jdbcType=VARCHAR},
      </if>
      <if test="record.procedureId != null">
        procedureId = #{record.procedureId,jdbcType=INTEGER},
      </if>
      <if test="record.procedureName != null">
        procedureName = #{record.procedureName,jdbcType=VARCHAR},
      </if>
      <if test="record.empId != null">
        empId = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=DECIMAL},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.completeTime != null">
        completeTime = #{record.completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null">
        lastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.productionNo != null">
        productionNo = #{record.productionNo,jdbcType=VARCHAR},
      </if>
      <if test="record.luoId != null">
        luoId = #{record.luoId,jdbcType=INTEGER},
      </if>
      <if test="record.pmOutBillNo != null">
        pmOutBillNo = #{record.pmOutBillNo,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        isDelete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.isChange != null">
        isChange = #{record.isChange,jdbcType=INTEGER},
      </if>
      <if test="record.workshop != null">
        workshop = #{record.workshop,jdbcType=VARCHAR},
      </if>
      <if test="record.inspectionor != null">
        inspectionor = #{record.inspectionor,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_Production_Procedure_Confirm
    set id = #{record.id,jdbcType=INTEGER},
      orderNo = #{record.orderNo,jdbcType=VARCHAR},
      productNo = #{record.productNo,jdbcType=VARCHAR},
      procedureId = #{record.procedureId,jdbcType=INTEGER},
      procedureName = #{record.procedureName,jdbcType=VARCHAR},
      empId = #{record.empId,jdbcType=INTEGER},
      num = #{record.num,jdbcType=DECIMAL},
      price = #{record.price,jdbcType=DECIMAL},
      money = #{record.money,jdbcType=DECIMAL},
      completeTime = #{record.completeTime,jdbcType=TIMESTAMP},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      lastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=INTEGER},
      operator = #{record.operator,jdbcType=VARCHAR},
      productionNo = #{record.productionNo,jdbcType=VARCHAR},
      luoId = #{record.luoId,jdbcType=INTEGER},
      pmOutBillNo = #{record.pmOutBillNo,jdbcType=VARCHAR},
      isDelete = #{record.isDelete,jdbcType=INTEGER},
      isChange = #{record.isChange,jdbcType=INTEGER},
      workshop = #{record.workshop,jdbcType=VARCHAR},
      inspectionor = #{record.inspectionor,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.btjf.model.order.ProductionProcedureConfirm">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_Production_Procedure_Confirm
    <set>
      <if test="orderNo != null">
        orderNo = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        productNo = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="procedureId != null">
        procedureId = #{procedureId,jdbcType=INTEGER},
      </if>
      <if test="procedureName != null">
        procedureName = #{procedureName,jdbcType=VARCHAR},
      </if>
      <if test="empId != null">
        empId = #{empId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=DECIMAL},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="completeTime != null">
        completeTime = #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null">
        lastModifyTime = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="productionNo != null">
        productionNo = #{productionNo,jdbcType=VARCHAR},
      </if>
      <if test="luoId != null">
        luoId = #{luoId,jdbcType=INTEGER},
      </if>
      <if test="pmOutBillNo != null">
        pmOutBillNo = #{pmOutBillNo,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="isChange != null">
        isChange = #{isChange,jdbcType=INTEGER},
      </if>
      <if test="workshop != null">
        workshop = #{workshop,jdbcType=VARCHAR},
      </if>
      <if test="inspectionor != null">
        inspectionor = #{inspectionor,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.btjf.model.order.ProductionProcedureConfirm">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_Production_Procedure_Confirm
    set orderNo = #{orderNo,jdbcType=VARCHAR},
      productNo = #{productNo,jdbcType=VARCHAR},
      procedureId = #{procedureId,jdbcType=INTEGER},
      procedureName = #{procedureName,jdbcType=VARCHAR},
      empId = #{empId,jdbcType=INTEGER},
      num = #{num,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      money = #{money,jdbcType=DECIMAL},
      completeTime = #{completeTime,jdbcType=TIMESTAMP},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      lastModifyTime = #{lastModifyTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      productionNo = #{productionNo,jdbcType=VARCHAR},
      luoId = #{luoId,jdbcType=INTEGER},
      pmOutBillNo = #{pmOutBillNo,jdbcType=VARCHAR},
      isDelete = #{isDelete,jdbcType=INTEGER},
      isChange = #{isChange,jdbcType=INTEGER},
      workshop = #{workshop,jdbcType=VARCHAR},
      inspectionor = #{inspectionor,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getOrderByMouth" resultType="com.btjf.model.order.Order">
        select DISTINCT o.*
        from t_Production_Procedure_Confirm p LEFT JOIN t_Order o ON p.orderNo = o.orderNo
         where ((p.type = 2 and p.isChange=0) or (p.type =1 and p.isChange=0))
         and p.isDelete = 0
        and DATE_FORMAT(p.completeTime, '%Y-%m' ) = #{date}
        and p.workshop = #{deptName,jdbcType=VARCHAR}
        ORDER BY o.createTime DESC
;
    </select>
    <select id="getOrderProductByMouth" resultType="com.btjf.vo.weixin.OrderProductVo">
      select a.productNo,a.unit, max(a.num) num from
      (
        select DISTINCT p.productNo, sum(p.num) AS num, pp.unit
        from t_Production_Procedure_Confirm p
        LEFT JOIN t_Product pp ON p.productNo = pp.productNo
        where ((p.type = 2 and p.isChange=0) or (p.type =1 and p.isChange=0))
         and p.isDelete = 0
        and p.orderNo = #{orderNo,jdbcType=VARCHAR}
        and p.workshop = #{deptName,jdbcType=VARCHAR}
        and DATE_FORMAT(p.completeTime, '%Y-%m' ) = #{date}
        group by p.productNo,p.procedureId, pp.unit
        ) a group by a.productNo,a.unit
    </select>
    <select id="getByOrderAndProduct" resultType="com.btjf.model.product.ProductProcedure">
        SELECT DISTINCT
        pp.*
        from t_Production_Procedure_Confirm p LEFT JOIN t_Product_Procedure pp ON pp.id = p.procedureId
        where  p.productNo = #{productNo,jdbcType=VARCHAR}
        and p.orderNo = #{orderNo,jdbcType=VARCHAR}
        and p.isChange=0
         and p.isDelete = 0
         and p.workshop = #{deptName,jdbcType=VARCHAR}
         and DATE_FORMAT(p.completeTime, '%Y-%m' ) = #{date}
    </select>
    <select id="getEmpNum" resultType="com.btjf.vo.weixin.EmpProcedureDetailVo">
         SELECT DISTINCT
        p.empId,
        sum(p.num) num,
        e.name AS empName
        from t_Production_Procedure_Confirm p  LEFT JOIN t_Emp e ON e.id = p.empId
        where  p.productNo = #{productNo,jdbcType=VARCHAR}
        and p.orderNo = #{orderNo,jdbcType=VARCHAR}
        and p.procedureId = #{id,jdbcType=INTEGER}
        and DATE_FORMAT(p.completeTime, '%Y-%m' ) = #{date}
        and p.isChange=0
         and p.isDelete = 0
         and p.workshop = #{deptName,jdbcType=VARCHAR}
         group by p.empId,e.name
    </select>

    <select id="select" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM t_Production_Procedure_Confirm
        WHERE 1=1
        <if test="orderNo != null">
            AND orderNo = #{orderNo,jdbcType=VARCHAR}
        </if>
        <if test="productNo != null">
            AND productNo = #{productNo,jdbcType=VARCHAR}
        </if>
        <if test="procedureId != null">
            AND procedureId = #{procedureId,jdbcType=INTEGER}
        </if>
        <if test="procedureName != null">
            AND procedureName = #{procedureName,jdbcType=VARCHAR}
        </if>
        <if test="empId != null">
            AND empId = #{empId,jdbcType=INTEGER}
        </if>
        <if test="type != null">
            AND  type = #{type,jdbcType=INTEGER}
        </if>
        <if test="operator != null">
            AND operator = #{operator,jdbcType=VARCHAR}
        </if>
        <if test="productionNo != null">
            AND productionNo = #{productionNo,jdbcType=VARCHAR}
        </if>
        <if test="luoId != null">
            AND luoId = #{luoId,jdbcType=INTEGER}
        </if>
        <if test="pmOutBillNo != null">
            AND pmOutBillNo = #{pmOutBillNo,jdbcType=VARCHAR}
        </if>
        <if test="isChange != null">
            AND isChange = #{isChange,jdbcType=INTEGER}
        </if>
        AND isDelete = 0
    </select>
    <select id="getCheckList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        from t_Production_Procedure_Confirm p
        where  p.productNo = #{productNo,jdbcType=VARCHAR}
        and p.orderNo = #{orderNo,jdbcType=VARCHAR}
        and p.procedureId = #{id,jdbcType=INTEGER}
         and p.isDelete = 0
         and p.workshop = #{deptName,jdbcType=VARCHAR}
        and DATE_FORMAT(p.completeTime, '%Y-%m' ) = #{date}
        order by p.completeTime desc
    </select>
    <select id="analyseForDay" resultType="com.btjf.vo.weixin.EmpDayWorkVo">
        SELECT
            DATE_FORMAT(a.completeTime, "%Y-%m-%d") date,
            SUM(a.money) sum
        FROM
            (
                (
                    SELECT
                        p.completeTime,
                        p.money
                    FROM
                        t_Production_Procedure_Confirm p
                    WHERE
                        DATE_FORMAT(p.completeTime, '%Y-%m') = #{date}
                    AND p.empId = #{empId}
                    AND (p.isChange=0 or p.isChange=2)
                    AND p.isDelete = 0
                )
                UNION ALL
                    (
                        SELECT
                            s.createTime,
                            s.money
                        FROM
                            t_Production_Procedure_Scan s
                        WHERE
                            DATE_FORMAT(s.createTime, '%Y-%m') = #{date}
                        AND s.empId = #{empId}
                        AND s.status = 0
                        AND s.isDelete = 0
                    )
            ) a
        GROUP BY
            DATE_FORMAT(a.completeTime, "%Y-%m-%d")
        ORDER BY
            DATE_FORMAT(a.completeTime, "%Y-%m-%d") DESC
    </select>
    <select id="getWorkForDay" resultType="com.btjf.vo.weixin.EmpDayWorkDetailVo">
		SELECT
            a.*
        FROM
            (
                (
                    SELECT DISTINCT
                        p.orderNo,
                        p.productNo,
                        p.luoId,
                        CASE
                    WHEN p.luoId IS NOT NULL THEN
                        CONCAT(p.productionNo, '-', l.sort)
                    WHEN p.luoId IS NULL
                    AND p.productionNo IS NOT NULL THEN
                        p.productionNo
                    WHEN p.pmOutBillNo IS NOT NULL THEN
                        p.pmOutBillNo
                    END AS billNo,
                    CASE
                WHEN p.luoId IS NOT NULL THEN
                    2
                WHEN p.luoId IS NULL
                AND p.productionNo IS NOT NULL THEN
                    1
                WHEN p.pmOutBillNo IS NOT NULL THEN
                    0
                END AS type,
                CASE
                    WHEN p.isChange=0 THEN '已质检'
                    WHEN p.isChange=2 THEN '已结算'
                    END
                 AS statusDesc,
                p.completeTime time
            FROM
                t_Production_Procedure_Confirm p
            LEFT JOIN t_Production_Luo l ON p.luoId = l.id
            WHERE
                DATE_FORMAT(p.completeTime, "%Y-%m-%d") = #{date}
            AND p.empId = #{empId}
            AND (p.isChange=0 or p.isChange=2)
            AND p.isDelete = 0
                )
                UNION ALL
                    (
                        SELECT DISTINCT
                            s.orderNo,
                            s.productNo,
                            s.luoId,
                            CASE
                        WHEN s.luoId IS NOT NULL THEN
                            CONCAT(s.productionNo, '-', ll.sort)
                        WHEN s.luoId IS NULL
                        AND s.productionNo IS NOT NULL THEN
                            s.productionNo
                        WHEN s.pmOutBillNo IS NOT NULL THEN
                            s.pmOutBillNo
                        END AS billNo,
                        CASE
                    WHEN s.luoId IS NOT NULL THEN
                        2
                    WHEN s.luoId IS NULL
                    AND s.productionNo IS NOT NULL THEN
                        1
                    WHEN s.pmOutBillNo IS NOT NULL THEN
                        0
                    END AS type,
                    '未质检' AS statusDesc,
                    s.createTime time
                FROM
                    t_Production_Procedure_Scan s
                LEFT JOIN t_Production_Luo ll ON s.luoId = ll.id
                WHERE
                    DATE_FORMAT(s.createTime, "%Y-%m-%d") = #{date}
                AND s.empId = #{empId}
                AND s. STATUS = 0
                AND s.isDelete = 0
                    )
            ) a
        ORDER BY
            time DESC
    </select>
    <select id="getWorkProcedureInfo" resultType="com.btjf.vo.weixin.ProcedureInfoVo">
    (
        SELECT
            p.procedureName NAME,
            p.num,
            p.price,
            p.money
        FROM
            t_Production_Procedure_Confirm p
        WHERE
            DATE_FORMAT(p.completeTime, "%Y-%m-%d") = #{date}
        AND p.empId = #{empId}
        AND p.orderNo = #{orderNo}
        AND p.productNo = #{productNo}
        <if test="type == 0 ">
            AND p.pmOutBillNo = #{billNo}
        </if>
        <if test="type == 1 ">
            AND p.productionNo = #{billNo}
        </if>
        <if test="type == 2 ">
            AND p.productionNo = #{billNo} AND p.luoId = #{luoId}
        </if>
        AND (p.isChange=0 or p.isChange=2)
        AND p.isDelete = 0
    )
    UNION ALL
	(
		SELECT
			s.procedureName NAME,
			s.num,
			s.price,
			s.money
		FROM
			t_Production_Procedure_Scan s
		WHERE
			DATE_FORMAT(s.createTime, "%Y-%m-%d") = #{date}
		AND s.empId = #{empId}
        AND s.orderNo = #{orderNo}
        AND s.productNo = #{productNo}
        <if test="type == 0 ">
            AND s.pmOutBillNo = #{billNo}
        </if>
        <if test="type == 1 ">
            AND s.productionNo = #{billNo}
        </if>
        <if test="type == 2 ">
            AND s.productionNo = #{billNo} AND s.luoId = #{luoId}
        </if>
		AND s. STATUS = 0
		AND s.isDelete = 0
	)
    </select>
    <select id="yieldList" resultType="com.btjf.vo.ProcedureYieldVo">
        SELECT
        a.*
        FROM
        (
        ( select
        DATE_FORMAT(p.completeTime, "%Y-%m") yearMonth,
        e.name name,
        p.workshop dept,
        w.name work,
        p.orderNo orderNo,
        p.productNo productNo,
        CASE
        WHEN p.luoId IS NOT NULL THEN
        CONCAT(p.productionNo, '-', l.sort)
        WHEN p.luoId IS NULL
        AND p.productionNo IS NOT NULL THEN
        p.productionNo
        WHEN p.pmOutBillNo IS NOT NULL THEN
        p.pmOutBillNo
        END AS productionNo,
        p.procedureName procedureName,
        p.num num,
        p.price price,
        p.money money,
        p.createTime date,
        p.inspectionor checker,
        p.createTime sortTime
        from  t_Production_Procedure_Confirm p LEFT JOIN t_Emp e ON p.empId = e.id
        LEFT JOIN t_Emp_work w ON w.id = e.workId
        LEFT JOIN t_Production_Luo l ON p.luoId = l.id
        where (p.isChange=0 or p.isChange=2)
        AND p.isDelete = 0
        <if test="name != null ">
          AND e.name = #{name}
        </if>
        <if test="deptId != null ">
            AND e.deptId = #{deptId}
        </if>
        <if test="workId != null ">
            AND e.workId = #{workId}
        </if>
        <if test="orderNo != null ">
            AND p.orderNo = #{orderNo}
        </if>
        <if test="productNo != null ">
            AND p.productNo = #{productNo}
        </if>
        <if test="procedureName != null ">
            AND p.procedureName = #{procedureName}
        </if>
        <if test="yearMonth != null ">
            AND DATE_FORMAT(p.completeTime, "%Y-%m") = #{yearMonth}
        </if>
        <if test="startDate != null ">
            AND p.createTime &gt;= #{startDate}
        </if>
        <if test="endDate != null ">
            AND p.createTime &lt;= #{endDate}
        </if>
        )
        UNION ALL
        (
        SELECT
        DATE_FORMAT(s.createTime, "%Y-%m") yearMonth,
        e.name name,
        d.deptName dept,
        w.name work,
        s.orderNo orderNo,
        s.productNo productNo,
        CASE
        WHEN s.luoId IS NOT NULL THEN
        CONCAT(s.productionNo, '-', l.sort)
        WHEN s.luoId IS NULL
        AND s.productionNo IS NOT NULL THEN
        s.productionNo
        WHEN s.pmOutBillNo IS NOT NULL THEN
        s.pmOutBillNo
        END AS productionNo,
        s.procedureName procedureName,
        s.num num,
        s.price price,
        s.money money,
        null as date,
        null as checker,
        s.createTime sortTime
        FROM
        t_Production_Procedure_Scan s
        LEFT JOIN t_Emp e ON s.empId = e.id
        LEFT JOIN t_Emp_work w ON w.id = e.workId
        LEFT JOIN t_Production_Luo l ON s.luoId = l.id
        LEFT JOIN t_SysDept d ON d.id = e.deptId
        WHERE
        s. STATUS = 0
        AND s.isDelete = 0
        <if test="name != null ">
            AND e.name = #{name}
        </if>
        <if test="deptId != null ">
            AND e.deptId = #{deptId}
        </if>
        <if test="workId != null ">
            AND e.workId = #{workId}
        </if>
        <if test="orderNo != null ">
            AND s.orderNo = #{orderNo}
        </if>
        <if test="productNo != null ">
            AND s.productNo = #{productNo}
        </if>
        <if test="procedureName != null ">
            AND s.procedureName = #{procedureName}
        </if>
        <if test="yearMonth != null ">
            AND DATE_FORMAT(s.createTime, "%Y-%m") = #{yearMonth}
        </if>
        <if test="startDate != null ">
            AND 1 !=1
        </if>
        <if test="endDate != null ">
            AND 1 !=1
        </if>
        )
        ) a
        ORDER  BY a.sortTime DESC
    </select>
    <select id="getUnSettlement" resultType="com.btjf.model.order.ProductionProcedureConfirm">
        select * from t_Production_Procedure_Confirm
        where  DATE_FORMAT(createTime, "%Y-%m") = #{yearMonth}
        and empId = #{empId}
        and isDelete = 0
        and isChange in (0,2)

    </select>


    <update id="delete">
        update t_Production_Procedure_Confirm
        SET isDelete = 1 , lastModifyTime = now()
        WHERE orderNo = #{orderNo,jdbcType=VARCHAR} and productNo =#{productNo}
        <if test="productionNo != null">
            and productionNo = #{productionNo}
        </if>
        <if test="louId != null">
            and luoId = #{louId}
        </if>
        <if test="billOutNo != null">
            and pmOutBillNo = #{billOutNo}
        </if>
        <if test="procedureId != null">
          and procedureId = #{procedureId}
        </if>
        and type in(1,3) and isChange = 0 <!--质检和工资记录都要删掉-->
    </update>

    <update id="deleteType2">
        update t_Production_Procedure_Confirm p
        set  p.isDelete = 1
        where  p.productNo = #{productNo,jdbcType=VARCHAR}
        and p.orderNo = #{orderNo,jdbcType=VARCHAR}
        and p.procedureId = #{id,jdbcType=INTEGER}
        and p.type = 2
        and p.isChange=0
         and p.isDelete = 0
         and p.workshop = #{deptName,jdbcType=VARCHAR}
         and DATE_FORMAT(p.completeTime, '%Y-%m' ) = #{date}
    </update>
    <update id="updateChange">
        update t_Production_Procedure_Confirm p
        set  p.isChange = 1
        where  p.productNo = #{productNo,jdbcType=VARCHAR}
        and p.orderNo = #{orderNo,jdbcType=VARCHAR}
        and p.procedureId = #{id,jdbcType=INTEGER}
        and (p.type =1 or p.type=3)
        and p.isDelete = 0
        and p.workshop = #{deptName,jdbcType=VARCHAR}
        and DATE_FORMAT(p.completeTime, '%Y-%m' ) = #{date}
    </update>
    <update id="updateSettlement">
        update t_Production_Procedure_Confirm
        set isChange = 2
        where id in
        (
        <foreach collection="ids" index="index" item="no" separator=",">
            #{no}
        </foreach>
        )
    </update>


  <select id="getHandleNum" resultType="integer">
    select sum(num)
    from t_Production_Procedure_Confirm
    where productNo = #{productNo,jdbcType=VARCHAR}
        and orderNo = #{orderNo,jdbcType=VARCHAR}
        and  procedureName =#{procedureName}
        and type = 2
        and isDelete = 0
  </select>


</mapper>